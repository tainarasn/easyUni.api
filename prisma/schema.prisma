// *** GENERATED BY PRISMIX :: DO NOT EDIT ***
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

model User {
  id       Int      @id @default(autoincrement())
  name     String
  image    String?
  username String   @unique
  email    String   @unique
  password String
  student  Student? @relation(name: "StudentToUser")
  admin    Admin?   @relation(name: "AdminToUser")
}

model Student {
  id               Int        @id @default(autoincrement())
  period           Int
  materiasCursadas Materia[]  @relation(name: "MateriaToStudent")
  atividades       Activity[] @relation(name: "ActivityToStudent")
  course           Course     @relation(name: "CourseToStudent", fields: [courseId], references: [id])
  courseId         Int
  user             User?      @relation(name: "StudentToUser", fields: [userId], references: [id], onDelete: Cascade)
  userId           Int?       @unique
}

model Admin {
  id     Int   @id @default(autoincrement())
  user   User? @relation(name: "AdminToUser", fields: [userId], references: [id], onDelete: Cascade)
  userId Int?  @unique
}

model Course {
  id                  Int             @id @default(autoincrement())
  students            Student[]       @relation(name: "CourseToStudent")
  name                String
  campus              String?
  totalPeriods        Float
  totalHoursActivites Int?
  matriz              Int?
  materias            CourseMateria[] @relation(name: "CourseToCourseMateria")
  trilhas             Trail[]         @relation(name: "CourseToTrail")
  atividades          Activity[]      @relation(name: "ActivityToCourse")
}

model Materia {
  id            Int             @id @default(autoincrement())
  student       Student?        @relation(name: "MateriaToStudent", fields: [studentId], references: [id])
  studentId     Int?
  code          String          @unique
  name          String
  totalHours    Int
  period        Int
  periodRequire Int?
  prerequisites Materia[]       @relation(name: "Prerequisites")
  requiredBy    Materia[]       @relation(name: "Prerequisites")
  courses       CourseMateria[] @relation(name: "CourseMateriaToMateria")
  trilha        Trail?          @relation(name: "MateriaToTrail", fields: [trilhaId], references: [id])
  trilhaId      Int?
}

model Activity {
  id              Int      @id @default(autoincrement())
  student         Student? @relation(name: "ActivityToStudent", fields: [studentId], references: [id])
  studentId       Int?
  name            String
  totalHours      String
  linkCertificate String?
  course          Course   @relation(name: "ActivityToCourse", fields: [courseId], references: [id])
  courseId        Int
}

model CourseMateria {
  id        Int     @id
  course    Course  @relation(name: "CourseToCourseMateria", fields: [courseId], references: [id])
  courseId  Int
  materia   Materia @relation(name: "CourseMateriaToMateria", fields: [materiaId], references: [id])
  materiaId Int
}

model Trail {
  id       Int       @id @default(autoincrement())
  course   Course    @relation(name: "CourseToTrail", fields: [courseId], references: [id])
  courseId Int
  materias Materia[] @relation(name: "MateriaToTrail")
  code     String
  name     String?
}
